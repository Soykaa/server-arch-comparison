// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

package main.ru.hse.java.proto;

/**
 * Protobuf type {@code Query}
 */
public  final class Query extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Query)
    QueryOrBuilder {
  // Use Query.newBuilder() to construct.
  private Query(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Query() {
    id_ = 0;
    size_ = 0;
    num_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Query(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            id_ = input.readInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            size_ = input.readInt32();
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              num_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            num_.add(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
              num_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              num_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        num_ = java.util.Collections.unmodifiableList(num_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return main.ru.hse.java.proto.QueryProto.internal_static_Query_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return main.ru.hse.java.proto.QueryProto.internal_static_Query_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            main.ru.hse.java.proto.Query.class, main.ru.hse.java.proto.Query.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private int id_;
  /**
   * <code>required int32 id = 1;</code>
   */
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required int32 id = 1;</code>
   */
  public int getId() {
    return id_;
  }

  public static final int SIZE_FIELD_NUMBER = 2;
  private int size_;
  /**
   * <code>required int32 size = 2;</code>
   */
  public boolean hasSize() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required int32 size = 2;</code>
   */
  public int getSize() {
    return size_;
  }

  public static final int NUM_FIELD_NUMBER = 3;
  private java.util.List<java.lang.Integer> num_;
  /**
   * <code>repeated int32 num = 3;</code>
   */
  public java.util.List<java.lang.Integer>
      getNumList() {
    return num_;
  }
  /**
   * <code>repeated int32 num = 3;</code>
   */
  public int getNumCount() {
    return num_.size();
  }
  /**
   * <code>repeated int32 num = 3;</code>
   */
  public int getNum(int index) {
    return num_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasSize()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, id_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, size_);
    }
    for (int i = 0; i < num_.size(); i++) {
      output.writeInt32(3, num_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, id_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, size_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < num_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(num_.get(i));
      }
      size += dataSize;
      size += 1 * getNumList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof main.ru.hse.java.proto.Query)) {
      return super.equals(obj);
    }
    main.ru.hse.java.proto.Query other = (main.ru.hse.java.proto.Query) obj;

    boolean result = true;
    result = result && (hasId() == other.hasId());
    if (hasId()) {
      result = result && (getId()
          == other.getId());
    }
    result = result && (hasSize() == other.hasSize());
    if (hasSize()) {
      result = result && (getSize()
          == other.getSize());
    }
    result = result && getNumList()
        .equals(other.getNumList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
    }
    if (hasSize()) {
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getSize();
    }
    if (getNumCount() > 0) {
      hash = (37 * hash) + NUM_FIELD_NUMBER;
      hash = (53 * hash) + getNumList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static main.ru.hse.java.proto.Query parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static main.ru.hse.java.proto.Query parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static main.ru.hse.java.proto.Query parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static main.ru.hse.java.proto.Query parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static main.ru.hse.java.proto.Query parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static main.ru.hse.java.proto.Query parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static main.ru.hse.java.proto.Query parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static main.ru.hse.java.proto.Query parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static main.ru.hse.java.proto.Query parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static main.ru.hse.java.proto.Query parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(main.ru.hse.java.proto.Query prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Query}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Query)
      main.ru.hse.java.proto.QueryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return main.ru.hse.java.proto.QueryProto.internal_static_Query_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return main.ru.hse.java.proto.QueryProto.internal_static_Query_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              main.ru.hse.java.proto.Query.class, main.ru.hse.java.proto.Query.Builder.class);
    }

    // Construct using main.ru.hse.java.proto.Query.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      size_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      num_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return main.ru.hse.java.proto.QueryProto.internal_static_Query_descriptor;
    }

    public main.ru.hse.java.proto.Query getDefaultInstanceForType() {
      return main.ru.hse.java.proto.Query.getDefaultInstance();
    }

    public main.ru.hse.java.proto.Query build() {
      main.ru.hse.java.proto.Query result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public main.ru.hse.java.proto.Query buildPartial() {
      main.ru.hse.java.proto.Query result = new main.ru.hse.java.proto.Query(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.id_ = id_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.size_ = size_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        num_ = java.util.Collections.unmodifiableList(num_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.num_ = num_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof main.ru.hse.java.proto.Query) {
        return mergeFrom((main.ru.hse.java.proto.Query)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(main.ru.hse.java.proto.Query other) {
      if (other == main.ru.hse.java.proto.Query.getDefaultInstance()) return this;
      if (other.hasId()) {
        setId(other.getId());
      }
      if (other.hasSize()) {
        setSize(other.getSize());
      }
      if (!other.num_.isEmpty()) {
        if (num_.isEmpty()) {
          num_ = other.num_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureNumIsMutable();
          num_.addAll(other.num_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasId()) {
        return false;
      }
      if (!hasSize()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      main.ru.hse.java.proto.Query parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (main.ru.hse.java.proto.Query) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int id_ ;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public Builder setId(int value) {
      bitField0_ |= 0x00000001;
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public Builder clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0;
      onChanged();
      return this;
    }

    private int size_ ;
    /**
     * <code>required int32 size = 2;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 size = 2;</code>
     */
    public int getSize() {
      return size_;
    }
    /**
     * <code>required int32 size = 2;</code>
     */
    public Builder setSize(int value) {
      bitField0_ |= 0x00000002;
      size_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 size = 2;</code>
     */
    public Builder clearSize() {
      bitField0_ = (bitField0_ & ~0x00000002);
      size_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> num_ = java.util.Collections.emptyList();
    private void ensureNumIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        num_ = new java.util.ArrayList<java.lang.Integer>(num_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated int32 num = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getNumList() {
      return java.util.Collections.unmodifiableList(num_);
    }
    /**
     * <code>repeated int32 num = 3;</code>
     */
    public int getNumCount() {
      return num_.size();
    }
    /**
     * <code>repeated int32 num = 3;</code>
     */
    public int getNum(int index) {
      return num_.get(index);
    }
    /**
     * <code>repeated int32 num = 3;</code>
     */
    public Builder setNum(
        int index, int value) {
      ensureNumIsMutable();
      num_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 num = 3;</code>
     */
    public Builder addNum(int value) {
      ensureNumIsMutable();
      num_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 num = 3;</code>
     */
    public Builder addAllNum(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureNumIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, num_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 num = 3;</code>
     */
    public Builder clearNum() {
      num_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Query)
  }

  // @@protoc_insertion_point(class_scope:Query)
  private static final main.ru.hse.java.proto.Query DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new main.ru.hse.java.proto.Query();
  }

  public static main.ru.hse.java.proto.Query getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<Query>
      PARSER = new com.google.protobuf.AbstractParser<Query>() {
    public Query parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Query(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Query> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Query> getParserForType() {
    return PARSER;
  }

  public main.ru.hse.java.proto.Query getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

